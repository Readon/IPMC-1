#include <services/ipmi/IPMI.h>

const std::map<u8, std::string> IPMI::NetFn::id_to_netfn {
	{ IPMI::NetFn::Chassis,     "Chassis"      },
	{ IPMI::NetFn::Bridge,      "Bridge"       },
	{ IPMI::NetFn::SensorEvent, "Sensor/Event" },
	{ IPMI::NetFn::App,         "App"          },
	{ IPMI::NetFn::Firmware,    "Firmware"     },
	{ IPMI::NetFn::Storage,     "Storage"      },
	{ IPMI::NetFn::PICMG,       "PICMG"        },
	{ IPMI::NetFn::CMS,         "CMS"          },
};
const std::map<std::string, u8> IPMI::NetFn::netfn_to_id {
	{ "Chassis",      IPMI::NetFn::Chassis     },
	{ "Bridge",       IPMI::NetFn::Bridge      },
	{ "Sensor/Event", IPMI::NetFn::SensorEvent },
	{ "App",          IPMI::NetFn::App         },
	{ "Firmware",     IPMI::NetFn::Firmware    },
	{ "Storage",      IPMI::NetFn::Storage     },
	{ "PICMG",        IPMI::NetFn::PICMG       },
	{ "CMS",          IPMI::NetFn::CMS         },
};

const std::map< u16, std::pair<std::string, std::string> > IPMI::id_to_cmd {
	{ IPMI::Chassis::Get_Chassis_Capabilities,              { "Chassis",      "Get Chassis Capabilities"                } },
	{ IPMI::Chassis::Get_Chassis_Status,                    { "Chassis",      "Get Chassis Status"                      } },
	{ IPMI::Chassis::Chassis_Control,                       { "Chassis",      "Chassis Control"                         } },
	{ IPMI::Chassis::Chassis_Reset,                         { "Chassis",      "Chassis Reset"                           } },
	{ IPMI::Chassis::Chassis_Identify,                      { "Chassis",      "Chassis Identify"                        } },
	{ IPMI::Chassis::Set_Chassis_Capabilities,              { "Chassis",      "Set Chassis Capabilities"                } },
	{ IPMI::Chassis::Set_Power_Restore_Policy,              { "Chassis",      "Set Power Restore Policy"                } },
	{ IPMI::Chassis::Get_System_Restart_Cause,              { "Chassis",      "Get System Restart Cause"                } },
	{ IPMI::Chassis::Set_System_Boot_Options,               { "Chassis",      "Set System Boot Options"                 } },
	{ IPMI::Chassis::Get_System_Boot_Options,               { "Chassis",      "Get System Boot Options"                 } },
	{ IPMI::Chassis::Get_POH_Counter,                       { "Chassis",      "Get POH Counter"                         } },
	{ IPMI::Bridge::Get_Bridge_State,                       { "Bridge",       "Get Bridge State"                        } },
	{ IPMI::Bridge::Set_Bridge_State,                       { "Bridge",       "Set Bridge State"                        } },
	{ IPMI::Bridge::Get_ICMB_Address,                       { "Bridge",       "Get ICMB Address"                        } },
	{ IPMI::Bridge::Set_ICMB_Address,                       { "Bridge",       "Set ICMB Address"                        } },
	{ IPMI::Bridge::Set_Bridge_Proxy_Address,               { "Bridge",       "Set Bridge Proxy Address"                } },
	{ IPMI::Bridge::Get_Bridge_Statistics,                  { "Bridge",       "Get Bridge Statistics"                   } },
	{ IPMI::Bridge::Get_ICMB_Capabilities,                  { "Bridge",       "Get ICMB Capabilities"                   } },
	{ IPMI::Bridge::Clear_Bridge_Statistics,                { "Bridge",       "Clear Bridge Statistics"                 } },
	{ IPMI::Bridge::Get_Bridge_Proxy_Address,               { "Bridge",       "Get Bridge Proxy Address"                } },
	{ IPMI::Bridge::Get_ICMB_Connector_Info,                { "Bridge",       "Get ICMB Connector Info"                 } },
	{ IPMI::Bridge::Get_ICMB_Connection_ID,                 { "Bridge",       "Get ICMB Connection ID"                  } },
	{ IPMI::Bridge::Send_ICMB_Connection_ID,                { "Bridge",       "Send ICMB Connection ID"                 } },
	{ IPMI::Bridge::Prepare_For_Discovery,                  { "Bridge",       "Prepare For Discovery"                   } },
	{ IPMI::Bridge::Get_Addresses_Bridge,                   { "Bridge",       "Get Addresses Bridge"                    } },
	{ IPMI::Bridge::Set_Discovered,                         { "Bridge",       "Set Discovered"                          } },
	{ IPMI::Bridge::Get_Chassis_Device_ID,                  { "Bridge",       "Get Chassis Device ID"                   } },
	{ IPMI::Bridge::Set_Chassis_Device_ID,                  { "Bridge",       "Set Chassis Device ID"                   } },
	{ IPMI::Bridge::Bridge_Request,                         { "Bridge",       "Bridge Request"                          } },
	{ IPMI::Bridge::Bridge_Message,                         { "Bridge",       "Bridge Message"                          } },
	{ IPMI::Bridge::Get_Event_Count,                        { "Bridge",       "Get Event Count"                         } },
	{ IPMI::Bridge::Set_Event_Destination,                  { "Bridge",       "Set Event Destination"                   } },
	{ IPMI::Bridge::Set_Event_Reception_State,              { "Bridge",       "Set Event Reception State"               } },
	{ IPMI::Bridge::Send_ICMB_Event_Message,                { "Bridge",       "Send ICMB Event Message"                 } },
	{ IPMI::Bridge::Get_Event_Destination,                  { "Bridge",       "Get Event Destination"                   } },
	{ IPMI::Bridge::Get_Event_Reception_State,              { "Bridge",       "Get Event Reception State"               } },
	{ IPMI::Bridge::Error_Report,                           { "Bridge",       "Error Report"                            } },
	{ IPMI::SensorEvent::Set_Event_Receiver,                { "Sensor/Event", "Set Event Receiver"                      } },
	{ IPMI::SensorEvent::Get_Event_Receiver,                { "Sensor/Event", "Get Event Receiver"                      } },
	{ IPMI::SensorEvent::Platform_Event,                    { "Sensor/Event", "Platform Event"                          } },
	{ IPMI::SensorEvent::Get_PEF_Capabilities,              { "Sensor/Event", "Get PEF Capabilities"                    } },
	{ IPMI::SensorEvent::Arm_PEF_Postpone_Timer,            { "Sensor/Event", "Arm PEF Postpone Timer"                  } },
	{ IPMI::SensorEvent::Set_PEF_Configuration_Parameters,  { "Sensor/Event", "Set PEF Configuration Parameters"        } },
	{ IPMI::SensorEvent::Get_PEF_Configuration_Parameters,  { "Sensor/Event", "Get PEF Configuration Parameters"        } },
	{ IPMI::SensorEvent::Set_Last_Processed_Event_ID,       { "Sensor/Event", "Set Last Processed Event ID"             } },
	{ IPMI::SensorEvent::Get_Last_Processed_Event_ID,       { "Sensor/Event", "Get Last Processed Event ID"             } },
	{ IPMI::SensorEvent::Alert_Immediate,                   { "Sensor/Event", "Alert Immediate"                         } },
	{ IPMI::SensorEvent::PET_Acknowledge,                   { "Sensor/Event", "PET Acknowledge"                         } },
	{ IPMI::SensorEvent::Get_Device_SDR_Info,               { "Sensor/Event", "Get Device SDR Info"                     } },
	{ IPMI::SensorEvent::Get_Device_SDR,                    { "Sensor/Event", "Get Device SDR"                          } },
	{ IPMI::SensorEvent::Reserve_Device_SDR_Repository,     { "Sensor/Event", "Reserve Device SDR Repository"           } },
	{ IPMI::SensorEvent::Get_Sensor_Reading_Factors,        { "Sensor/Event", "Get Sensor Reading Factors"              } },
	{ IPMI::SensorEvent::Set_Sensor_Hysteresis,             { "Sensor/Event", "Set Sensor Hysteresis"                   } },
	{ IPMI::SensorEvent::Get_Sensor_Hysteresis,             { "Sensor/Event", "Get Sensor Hysteresis"                   } },
	{ IPMI::SensorEvent::Set_Sensor_Threshold,              { "Sensor/Event", "Set Sensor Threshold"                    } },
	{ IPMI::SensorEvent::Get_Sensor_Threshold,              { "Sensor/Event", "Get Sensor Threshold"                    } },
	{ IPMI::SensorEvent::Set_Sensor_Event_Enable,           { "Sensor/Event", "Set Sensor Event Enable"                 } },
	{ IPMI::SensorEvent::Get_Sensor_Event_Enable,           { "Sensor/Event", "Get Sensor Event Enable"                 } },
	{ IPMI::SensorEvent::Rearm_Sensor_Events,               { "Sensor/Event", "Rearm Sensor Events"                     } },
	{ IPMI::SensorEvent::Get_Sensor_Event_Status,           { "Sensor/Event", "Get Sensor Event Status"                 } },
	{ IPMI::SensorEvent::Get_Sensor_Reading,                { "Sensor/Event", "Get Sensor Reading"                      } },
	{ IPMI::SensorEvent::Set_Sensor_Type,                   { "Sensor/Event", "Set Sensor Type"                         } },
	{ IPMI::SensorEvent::Get_Sensor_Type,                   { "Sensor/Event", "Get Sensor Type"                         } },
	{ IPMI::App::Get_Device_ID,                             { "App",          "Get Device ID"                           } },
	{ IPMI::App::Cold_Reset,                                { "App",          "Cold Reset"                              } },
	{ IPMI::App::Warm_Reset,                                { "App",          "Warm Reset"                              } },
	{ IPMI::App::Get_Self_Test_Results,                     { "App",          "Get Self Test Results"                   } },
	{ IPMI::App::Manufacturing_Test_On,                     { "App",          "Manufacturing Test On"                   } },
	{ IPMI::App::Set_ACPI_Power_State,                      { "App",          "Set ACPI Power State"                    } },
	{ IPMI::App::Get_ACPI_Power_State,                      { "App",          "Get ACPI Power State"                    } },
	{ IPMI::App::Get_Device_GUID,                           { "App",          "Get Device GUID"                         } },
	{ IPMI::App::Reset_Watchdog_Timer,                      { "App",          "Reset Watchdog Timer"                    } },
	{ IPMI::App::Set_Watchdog_Timer,                        { "App",          "Set Watchdog Timer"                      } },
	{ IPMI::App::Get_Watchdog_Timer,                        { "App",          "Get Watchdog Timer"                      } },
	{ IPMI::App::Set_BMC_Global_Enables,                    { "App",          "Set BMC Global Enables"                  } },
	{ IPMI::App::Get_BMC_Global_Enables,                    { "App",          "Get BMC Global Enables"                  } },
	{ IPMI::App::Clear_Message_Flags,                       { "App",          "Clear Message Flags"                     } },
	{ IPMI::App::Get_Message_Flags,                         { "App",          "Get Message Flags"                       } },
	{ IPMI::App::Enable_Message_Channel_Receive,            { "App",          "Enable Message Channel Receive"          } },
	{ IPMI::App::Get_Message,                               { "App",          "Get Message"                             } },
	{ IPMI::App::Send_Message,                              { "App",          "Send Message"                            } },
	{ IPMI::App::Read_Event_Message_Buffer,                 { "App",          "Read Event Message Buffer"               } },
	{ IPMI::App::Get_BT_Interface_Capabilities,             { "App",          "Get BT Interface Capabilities"           } },
	{ IPMI::App::Get_System_GUID,                           { "App",          "Get System GUID"                         } },
	{ IPMI::App::Get_Channel_Authentication_Capabilities,   { "App",          "Get Channel Authentication Capabilities" } },
	{ IPMI::App::Get_Session_Challenge,                     { "App",          "Get Session Challenge"                   } },
	{ IPMI::App::Activate_Session,                          { "App",          "Activate Session"                        } },
	{ IPMI::App::Set_Session_Privilege_Level,               { "App",          "Set Session Privilege Level"             } },
	{ IPMI::App::Close_Session,                             { "App",          "Close Session"                           } },
	{ IPMI::App::Get_Session_Info,                          { "App",          "Get Session Info"                        } },
	{ IPMI::App::Get_AuthCode,                              { "App",          "Get AuthCode"                            } },
	{ IPMI::App::Set_Channel_Access,                        { "App",          "Set Channel Access"                      } },
	{ IPMI::App::Get_Channel_Access,                        { "App",          "Get Channel Access"                      } },
	{ IPMI::App::Get_Channel_Info,                          { "App",          "Get Channel Info"                        } },
	{ IPMI::App::Set_User_Access,                           { "App",          "Set User Access"                         } },
	{ IPMI::App::Get_User_Access,                           { "App",          "Get User Access"                         } },
	{ IPMI::App::Set_User_Name,                             { "App",          "Set User Name"                           } },
	{ IPMI::App::Get_User_Name,                             { "App",          "Get User Name"                           } },
	{ IPMI::App::Set_User_Password,                         { "App",          "Set User Password"                       } },
	{ IPMI::App::Master_WriteRead,                          { "App",          "Master WriteRead"                        } },
	{ IPMI::Storage::Get_FRU_Inventory_Area_Info,           { "Storage",      "Get FRU Inventory Area Info"             } },
	{ IPMI::Storage::Read_FRU_Data,                         { "Storage",      "Read FRU Data"                           } },
	{ IPMI::Storage::Write_FRU_Data,                        { "Storage",      "Write FRU Data"                          } },
	{ IPMI::Storage::Get_SDR_Repository_Info,               { "Storage",      "Get SDR Repository Info"                 } },
	{ IPMI::Storage::Get_SDR_Repository_Allocation_Info,    { "Storage",      "Get SDR Repository Allocation Info"      } },
	{ IPMI::Storage::Reserve_SDR_Repository_Storage,        { "Storage",      "Reserve SDR Repository Storage"          } },
	{ IPMI::Storage::Get_SDR,                               { "Storage",      "Get SDR"                                 } },
	{ IPMI::Storage::Add_SDR,                               { "Storage",      "Add SDR"                                 } },
	{ IPMI::Storage::Partial_Add_SDR,                       { "Storage",      "Partial Add SDR"                         } },
	{ IPMI::Storage::Delete_SDR,                            { "Storage",      "Delete SDR"                              } },
	{ IPMI::Storage::Clear_SDR_Repository,                  { "Storage",      "Clear SDR Repository"                    } },
	{ IPMI::Storage::Get_SDR_Repository_Time,               { "Storage",      "Get SDR Repository Time"                 } },
	{ IPMI::Storage::Set_SDR_Repository_Time,               { "Storage",      "Set SDR Repository Time"                 } },
	{ IPMI::Storage::Enter_SDR_Repository_Update_Mode,      { "Storage",      "Enter SDR Repository Update Mode"        } },
	{ IPMI::Storage::Exit_SDR_Repository_Update_Mode,       { "Storage",      "Exit SDR Repository Update Mode"         } },
	{ IPMI::Storage::Run_Initialization_Agent,              { "Storage",      "Run Initialization Agent"                } },
	{ IPMI::Storage::Get_SEL_Info,                          { "Storage",      "Get SEL Info"                            } },
	{ IPMI::Storage::Get_SEL_Allocation_Info,               { "Storage",      "Get SEL Allocation Info"                 } },
	{ IPMI::Storage::Reserve_SEL,                           { "Storage",      "Reserve SEL"                             } },
	{ IPMI::Storage::Get_SEL_Entry,                         { "Storage",      "Get SEL Entry"                           } },
	{ IPMI::Storage::Add_SEL_Entry,                         { "Storage",      "Add SEL Entry"                           } },
	{ IPMI::Storage::Partial_Add_SEL_Entry,                 { "Storage",      "Partial Add SEL Entry"                   } },
	{ IPMI::Storage::Delete_SEL_Entry,                      { "Storage",      "Delete SEL Entry"                        } },
	{ IPMI::Storage::Clear_SEL,                             { "Storage",      "Clear SEL"                               } },
	{ IPMI::Storage::Get_SEL_Time,                          { "Storage",      "Get SEL Time"                            } },
	{ IPMI::Storage::Set_SEL_Time,                          { "Storage",      "Set SEL Time"                            } },
	{ IPMI::Storage::Get_Auxiliary_Log_Status,              { "Storage",      "Get Auxiliary Log Status"                } },
	{ IPMI::Storage::Set_Auxiliary_Log_Status,              { "Storage",      "Set Auxiliary Log Status"                } },
	{ IPMI::PICMG::Get_PICMG_Properties,                    { "PICMG",        "Get PICMG Properties"                    } },
	{ IPMI::PICMG::Get_Address_Info,                        { "PICMG",        "Get Address Info"                        } },
	{ IPMI::PICMG::Get_Shelf_Address_Info,                  { "PICMG",        "Get Shelf Address Info"                  } },
	{ IPMI::PICMG::Set_Shelf_Address_Info,                  { "PICMG",        "Set Shelf Address Info"                  } },
	{ IPMI::PICMG::FRU_Control,                             { "PICMG",        "FRU Control"                             } },
	{ IPMI::PICMG::Get_FRU_LED_Properties,                  { "PICMG",        "Get FRU LED Properties"                  } },
	{ IPMI::PICMG::Get_LED_Color_Capabilities,              { "PICMG",        "Get LED Color Capabilities"              } },
	{ IPMI::PICMG::Set_FRU_LED_State,                       { "PICMG",        "Set FRU LED State"                       } },
	{ IPMI::PICMG::Get_FRU_LED_State,                       { "PICMG",        "Get FRU LED State"                       } },
	{ IPMI::PICMG::Set_IPMB_State,                          { "PICMG",        "Set IPMB State"                          } },
	{ IPMI::PICMG::Set_FRU_Activation_Policy,               { "PICMG",        "Set FRU Activation Policy"               } },
	{ IPMI::PICMG::Get_FRU_Activation_Policy,               { "PICMG",        "Get FRU Activation Policy"               } },
	{ IPMI::PICMG::Set_FRU_Activation,                      { "PICMG",        "Set FRU Activation"                      } },
	{ IPMI::PICMG::Get_Device_Locator_Record_ID,            { "PICMG",        "Get Device Locator Record ID"            } },
	{ IPMI::PICMG::Set_Port_State,                          { "PICMG",        "Set Port State"                          } },
	{ IPMI::PICMG::Get_Port_State,                          { "PICMG",        "Get Port State"                          } },
	{ IPMI::PICMG::Compute_Power_Properties,                { "PICMG",        "Compute Power Properties"                } },
	{ IPMI::PICMG::Set_Power_Level,                         { "PICMG",        "Set Power Level"                         } },
	{ IPMI::PICMG::Get_Power_Level,                         { "PICMG",        "Get Power Level"                         } },
	{ IPMI::PICMG::Renegotiate_Power,                       { "PICMG",        "Renegotiate Power"                       } },
	{ IPMI::PICMG::Get_Fan_Speed_Properties,                { "PICMG",        "Get Fan Speed Properties"                } },
	{ IPMI::PICMG::Set_Fan_Level,                           { "PICMG",        "Set Fan Level"                           } },
	{ IPMI::PICMG::Get_Fan_Level,                           { "PICMG",        "Get Fan Level"                           } },
	{ IPMI::PICMG::Bused_Resource,                          { "PICMG",        "Bused Resource"                          } },
	{ IPMI::PICMG::Get_IPMB_Link_Info,                      { "PICMG",        "Get IPMB Link Info"                      } },
	{ IPMI::PICMG::Get_Shelf_Manager_IPMB_Address,          { "PICMG",        "Get Shelf Manager IPMB Address"          } },
	{ IPMI::PICMG::Set_Fan_Policy,                          { "PICMG",        "Set Fan Policy"                          } },
	{ IPMI::PICMG::Get_Fan_Policy,                          { "PICMG",        "Get Fan Policy"                          } },
	{ IPMI::PICMG::FRU_Control_Capabilities,                { "PICMG",        "FRU Control Capabilities"                } },
	{ IPMI::PICMG::FRU_Inventory_Device_Lock_Control,       { "PICMG",        "FRU Inventory Device Lock Control"       } },
	{ IPMI::PICMG::FRU_Inventory_Device_Write,              { "PICMG",        "FRU Inventory Device Write"              } },
	{ IPMI::PICMG::Get_Shelf_Manager_IP_Addresses,          { "PICMG",        "Get Shelf Manager IP Addresses"          } },
	{ IPMI::PICMG::Get_Shelf_Power_Allocation,              { "PICMG",        "Get Shelf Power Allocation"              } },
	{ IPMI::PICMG::Get_Telco_Alarm_Capability,              { "PICMG",        "Get Telco Alarm Capability"              } },
	{ IPMI::PICMG::Set_Telco_Alarm_State,                   { "PICMG",        "Set Telco Alarm State"                   } },
	{ IPMI::PICMG::Get_Telco_Alarm_State,                   { "PICMG",        "Get Telco Alarm State"                   } },
	{ IPMI::PICMG::Get_Telco_Alarm_Location,                { "PICMG",        "Get Telco Alarm Location"                } },
	{ IPMI::PICMG::Set_FRU_Extracted,                       { "PICMG",        "Set FRU Extracted"                       } },
	{ IPMI::Transport::Set_LAN_Configuration_Parameters,    { "Transport",    "Set LAN Configuration Parameters"        } },
	{ IPMI::Transport::Get_LAN_Configuration_Parameters,    { "Transport",    "Get LAN Configuration Parameters"        } },
	{ IPMI::Transport::Suspend_BMC_ARPs,                    { "Transport",    "Suspend BMC ARPs"                        } },
	{ IPMI::Transport::Get_IP_UDP_RMCP_Statistics,          { "Transport",    "Get IP UDP RMCP Statistics"              } },
	{ IPMI::Transport::Set_Serial_Modem_Configuration,      { "Transport",    "Set Serial Modem Configuration"          } },
	{ IPMI::Transport::Get_Serial_Modem_Configuration,      { "Transport",    "Get Serial Modem Configuration"          } },
	{ IPMI::Transport::Set_Serial_Modem_Mux,                { "Transport",    "Set Serial Modem Mux"                    } },
	{ IPMI::Transport::Get_TAP_Response_Codes,              { "Transport",    "Get TAP Response Codes"                  } },
	{ IPMI::Transport::Set_PPP_UDP_Proxy_Transmit_Data,     { "Transport",    "Set PPP UDP Proxy Transmit Data"         } },
	{ IPMI::Transport::Get_PPP_UDP_Proxy_Transmit_Data,     { "Transport",    "Get PPP UDP Proxy Transmit Data"         } },
	{ IPMI::Transport::Send_PPP_UDP_Proxy_Packet_Transport, { "Transport",    "Send PPP UDP Proxy Packet Transport"     } },
	{ IPMI::Transport::Get_PPP_UDP_Proxy_Receive_Data,      { "Transport",    "Get PPP UDP Proxy Receive Data"          } },
	{ IPMI::Transport::Serial_Modem_Connection_Active,      { "Transport",    "Serial Modem Connection Active"          } },
	{ IPMI::Transport::Set_User_Callback_Options,           { "Transport",    "Set User Callback Options"               } },
	{ IPMI::Transport::Get_User_Callback_Options,           { "Transport",    "Get User Callback Options"               } },
};

const std::map<std::string, u16> IPMI::cmd_to_id {
	{ "Get Chassis Capabilities",                IPMI::Chassis::Get_Chassis_Capabilities              },
	{ "Get Chassis Status",                      IPMI::Chassis::Get_Chassis_Status                    },
	{ "Chassis Control",                         IPMI::Chassis::Chassis_Control                       },
	{ "Chassis Reset",                           IPMI::Chassis::Chassis_Reset                         },
	{ "Chassis Identify",                        IPMI::Chassis::Chassis_Identify                      },
	{ "Set Chassis Capabilities",                IPMI::Chassis::Set_Chassis_Capabilities              },
	{ "Set Power Restore Policy",                IPMI::Chassis::Set_Power_Restore_Policy              },
	{ "Get System Restart Cause",                IPMI::Chassis::Get_System_Restart_Cause              },
	{ "Set System Boot Options",                 IPMI::Chassis::Set_System_Boot_Options               },
	{ "Get System Boot Options",                 IPMI::Chassis::Get_System_Boot_Options               },
	{ "Get POH Counter",                         IPMI::Chassis::Get_POH_Counter                       },
	{ "Get Bridge State",                        IPMI::Bridge::Get_Bridge_State                       },
	{ "Set Bridge State",                        IPMI::Bridge::Set_Bridge_State                       },
	{ "Get ICMB Address",                        IPMI::Bridge::Get_ICMB_Address                       },
	{ "Set ICMB Address",                        IPMI::Bridge::Set_ICMB_Address                       },
	{ "Set Bridge Proxy Address",                IPMI::Bridge::Set_Bridge_Proxy_Address               },
	{ "Get Bridge Statistics",                   IPMI::Bridge::Get_Bridge_Statistics                  },
	{ "Get ICMB Capabilities",                   IPMI::Bridge::Get_ICMB_Capabilities                  },
	{ "Clear Bridge Statistics",                 IPMI::Bridge::Clear_Bridge_Statistics                },
	{ "Get Bridge Proxy Address",                IPMI::Bridge::Get_Bridge_Proxy_Address               },
	{ "Get ICMB Connector Info",                 IPMI::Bridge::Get_ICMB_Connector_Info                },
	{ "Get ICMB Connection ID",                  IPMI::Bridge::Get_ICMB_Connection_ID                 },
	{ "Send ICMB Connection ID",                 IPMI::Bridge::Send_ICMB_Connection_ID                },
	{ "Prepare For Discovery",                   IPMI::Bridge::Prepare_For_Discovery                  },
	{ "Get Addresses Bridge",                    IPMI::Bridge::Get_Addresses_Bridge                   },
	{ "Set Discovered",                          IPMI::Bridge::Set_Discovered                         },
	{ "Get Chassis Device ID",                   IPMI::Bridge::Get_Chassis_Device_ID                  },
	{ "Set Chassis Device ID",                   IPMI::Bridge::Set_Chassis_Device_ID                  },
	{ "Bridge Request",                          IPMI::Bridge::Bridge_Request                         },
	{ "Bridge Message",                          IPMI::Bridge::Bridge_Message                         },
	{ "Get Event Count",                         IPMI::Bridge::Get_Event_Count                        },
	{ "Set Event Destination",                   IPMI::Bridge::Set_Event_Destination                  },
	{ "Set Event Reception State",               IPMI::Bridge::Set_Event_Reception_State              },
	{ "Send ICMB Event Message",                 IPMI::Bridge::Send_ICMB_Event_Message                },
	{ "Get Event Destination",                   IPMI::Bridge::Get_Event_Destination                  },
	{ "Get Event Reception State",               IPMI::Bridge::Get_Event_Reception_State              },
	{ "Error Report",                            IPMI::Bridge::Error_Report                           },
	{ "Set Event Receiver",                      IPMI::SensorEvent::Set_Event_Receiver                },
	{ "Get Event Receiver",                      IPMI::SensorEvent::Get_Event_Receiver                },
	{ "Platform Event",                          IPMI::SensorEvent::Platform_Event                    },
	{ "Get PEF Capabilities",                    IPMI::SensorEvent::Get_PEF_Capabilities              },
	{ "Arm PEF Postpone Timer",                  IPMI::SensorEvent::Arm_PEF_Postpone_Timer            },
	{ "Set PEF Configuration Parameters",        IPMI::SensorEvent::Set_PEF_Configuration_Parameters  },
	{ "Get PEF Configuration Parameters",        IPMI::SensorEvent::Get_PEF_Configuration_Parameters  },
	{ "Set Last Processed Event ID",             IPMI::SensorEvent::Set_Last_Processed_Event_ID       },
	{ "Get Last Processed Event ID",             IPMI::SensorEvent::Get_Last_Processed_Event_ID       },
	{ "Alert Immediate",                         IPMI::SensorEvent::Alert_Immediate                   },
	{ "PET Acknowledge",                         IPMI::SensorEvent::PET_Acknowledge                   },
	{ "Get Device SDR Info",                     IPMI::SensorEvent::Get_Device_SDR_Info               },
	{ "Get Device SDR",                          IPMI::SensorEvent::Get_Device_SDR                    },
	{ "Reserve Device SDR Repository",           IPMI::SensorEvent::Reserve_Device_SDR_Repository     },
	{ "Get Sensor Reading Factors",              IPMI::SensorEvent::Get_Sensor_Reading_Factors        },
	{ "Set Sensor Hysteresis",                   IPMI::SensorEvent::Set_Sensor_Hysteresis             },
	{ "Get Sensor Hysteresis",                   IPMI::SensorEvent::Get_Sensor_Hysteresis             },
	{ "Set Sensor Threshold",                    IPMI::SensorEvent::Set_Sensor_Threshold              },
	{ "Get Sensor Threshold",                    IPMI::SensorEvent::Get_Sensor_Threshold              },
	{ "Set Sensor Event Enable",                 IPMI::SensorEvent::Set_Sensor_Event_Enable           },
	{ "Get Sensor Event Enable",                 IPMI::SensorEvent::Get_Sensor_Event_Enable           },
	{ "Rearm Sensor Events",                     IPMI::SensorEvent::Rearm_Sensor_Events               },
	{ "Get Sensor Event Status",                 IPMI::SensorEvent::Get_Sensor_Event_Status           },
	{ "Get Sensor Reading",                      IPMI::SensorEvent::Get_Sensor_Reading                },
	{ "Set Sensor Type",                         IPMI::SensorEvent::Set_Sensor_Type                   },
	{ "Get Sensor Type",                         IPMI::SensorEvent::Get_Sensor_Type                   },
	{ "Get Device ID",                           IPMI::App::Get_Device_ID                             },
	{ "Cold Reset",                              IPMI::App::Cold_Reset                                },
	{ "Warm Reset",                              IPMI::App::Warm_Reset                                },
	{ "Get Self Test Results",                   IPMI::App::Get_Self_Test_Results                     },
	{ "Manufacturing Test On",                   IPMI::App::Manufacturing_Test_On                     },
	{ "Set ACPI Power State",                    IPMI::App::Set_ACPI_Power_State                      },
	{ "Get ACPI Power State",                    IPMI::App::Get_ACPI_Power_State                      },
	{ "Get Device GUID",                         IPMI::App::Get_Device_GUID                           },
	{ "Reset Watchdog Timer",                    IPMI::App::Reset_Watchdog_Timer                      },
	{ "Set Watchdog Timer",                      IPMI::App::Set_Watchdog_Timer                        },
	{ "Get Watchdog Timer",                      IPMI::App::Get_Watchdog_Timer                        },
	{ "Set BMC Global Enables",                  IPMI::App::Set_BMC_Global_Enables                    },
	{ "Get BMC Global Enables",                  IPMI::App::Get_BMC_Global_Enables                    },
	{ "Clear Message Flags",                     IPMI::App::Clear_Message_Flags                       },
	{ "Get Message Flags",                       IPMI::App::Get_Message_Flags                         },
	{ "Enable Message Channel Receive",          IPMI::App::Enable_Message_Channel_Receive            },
	{ "Get Message",                             IPMI::App::Get_Message                               },
	{ "Send Message",                            IPMI::App::Send_Message                              },
	{ "Read Event Message Buffer",               IPMI::App::Read_Event_Message_Buffer                 },
	{ "Get BT Interface Capabilities",           IPMI::App::Get_BT_Interface_Capabilities             },
	{ "Get System GUID",                         IPMI::App::Get_System_GUID                           },
	{ "Get Channel Authentication Capabilities", IPMI::App::Get_Channel_Authentication_Capabilities   },
	{ "Get Session Challenge",                   IPMI::App::Get_Session_Challenge                     },
	{ "Activate Session",                        IPMI::App::Activate_Session                          },
	{ "Set Session Privilege Level",             IPMI::App::Set_Session_Privilege_Level               },
	{ "Close Session",                           IPMI::App::Close_Session                             },
	{ "Get Session Info",                        IPMI::App::Get_Session_Info                          },
	{ "Get AuthCode",                            IPMI::App::Get_AuthCode                              },
	{ "Set Channel Access",                      IPMI::App::Set_Channel_Access                        },
	{ "Get Channel Access",                      IPMI::App::Get_Channel_Access                        },
	{ "Get Channel Info",                        IPMI::App::Get_Channel_Info                          },
	{ "Set User Access",                         IPMI::App::Set_User_Access                           },
	{ "Get User Access",                         IPMI::App::Get_User_Access                           },
	{ "Set User Name",                           IPMI::App::Set_User_Name                             },
	{ "Get User Name",                           IPMI::App::Get_User_Name                             },
	{ "Set User Password",                       IPMI::App::Set_User_Password                         },
	{ "Master WriteRead",                        IPMI::App::Master_WriteRead                          },
	{ "Get FRU Inventory Area Info",             IPMI::Storage::Get_FRU_Inventory_Area_Info           },
	{ "Read FRU Data",                           IPMI::Storage::Read_FRU_Data                         },
	{ "Write FRU Data",                          IPMI::Storage::Write_FRU_Data                        },
	{ "Get SDR Repository Info",                 IPMI::Storage::Get_SDR_Repository_Info               },
	{ "Get SDR Repository Allocation Info",      IPMI::Storage::Get_SDR_Repository_Allocation_Info    },
	{ "Reserve SDR Repository Storage",          IPMI::Storage::Reserve_SDR_Repository_Storage        },
	{ "Get SDR",                                 IPMI::Storage::Get_SDR                               },
	{ "Add SDR",                                 IPMI::Storage::Add_SDR                               },
	{ "Partial Add SDR",                         IPMI::Storage::Partial_Add_SDR                       },
	{ "Delete SDR",                              IPMI::Storage::Delete_SDR                            },
	{ "Clear SDR Repository",                    IPMI::Storage::Clear_SDR_Repository                  },
	{ "Get SDR Repository Time",                 IPMI::Storage::Get_SDR_Repository_Time               },
	{ "Set SDR Repository Time",                 IPMI::Storage::Set_SDR_Repository_Time               },
	{ "Enter SDR Repository Update Mode",        IPMI::Storage::Enter_SDR_Repository_Update_Mode      },
	{ "Exit SDR Repository Update Mode",         IPMI::Storage::Exit_SDR_Repository_Update_Mode       },
	{ "Run Initialization Agent",                IPMI::Storage::Run_Initialization_Agent              },
	{ "Get SEL Info",                            IPMI::Storage::Get_SEL_Info                          },
	{ "Get SEL Allocation Info",                 IPMI::Storage::Get_SEL_Allocation_Info               },
	{ "Reserve SEL",                             IPMI::Storage::Reserve_SEL                           },
	{ "Get SEL Entry",                           IPMI::Storage::Get_SEL_Entry                         },
	{ "Add SEL Entry",                           IPMI::Storage::Add_SEL_Entry                         },
	{ "Partial Add SEL Entry",                   IPMI::Storage::Partial_Add_SEL_Entry                 },
	{ "Delete SEL Entry",                        IPMI::Storage::Delete_SEL_Entry                      },
	{ "Clear SEL",                               IPMI::Storage::Clear_SEL                             },
	{ "Get SEL Time",                            IPMI::Storage::Get_SEL_Time                          },
	{ "Set SEL Time",                            IPMI::Storage::Set_SEL_Time                          },
	{ "Get Auxiliary Log Status",                IPMI::Storage::Get_Auxiliary_Log_Status              },
	{ "Set Auxiliary Log Status",                IPMI::Storage::Set_Auxiliary_Log_Status              },
	{ "Get PICMG Properties",                    IPMI::PICMG::Get_PICMG_Properties                    },
	{ "Get Address Info",                        IPMI::PICMG::Get_Address_Info                        },
	{ "Get Shelf Address Info",                  IPMI::PICMG::Get_Shelf_Address_Info                  },
	{ "Set Shelf Address Info",                  IPMI::PICMG::Set_Shelf_Address_Info                  },
	{ "FRU Control",                             IPMI::PICMG::FRU_Control                             },
	{ "Get FRU LED Properties",                  IPMI::PICMG::Get_FRU_LED_Properties                  },
	{ "Get LED Color Capabilities",              IPMI::PICMG::Get_LED_Color_Capabilities              },
	{ "Set FRU LED State",                       IPMI::PICMG::Set_FRU_LED_State                       },
	{ "Get FRU LED State",                       IPMI::PICMG::Get_FRU_LED_State                       },
	{ "Set IPMB State",                          IPMI::PICMG::Set_IPMB_State                          },
	{ "Set FRU Activation Policy",               IPMI::PICMG::Set_FRU_Activation_Policy               },
	{ "Get FRU Activation Policy",               IPMI::PICMG::Get_FRU_Activation_Policy               },
	{ "Set FRU Activation",                      IPMI::PICMG::Set_FRU_Activation                      },
	{ "Get Device Locator Record ID",            IPMI::PICMG::Get_Device_Locator_Record_ID            },
	{ "Set Port State",                          IPMI::PICMG::Set_Port_State                          },
	{ "Get Port State",                          IPMI::PICMG::Get_Port_State                          },
	{ "Compute Power Properties",                IPMI::PICMG::Compute_Power_Properties                },
	{ "Set Power Level",                         IPMI::PICMG::Set_Power_Level                         },
	{ "Get Power Level",                         IPMI::PICMG::Get_Power_Level                         },
	{ "Renegotiate Power",                       IPMI::PICMG::Renegotiate_Power                       },
	{ "Get Fan Speed Properties",                IPMI::PICMG::Get_Fan_Speed_Properties                },
	{ "Set Fan Level",                           IPMI::PICMG::Set_Fan_Level                           },
	{ "Get Fan Level",                           IPMI::PICMG::Get_Fan_Level                           },
	{ "Bused Resource",                          IPMI::PICMG::Bused_Resource                          },
	{ "Get IPMB Link Info",                      IPMI::PICMG::Get_IPMB_Link_Info                      },
	{ "Get Shelf Manager IPMB Address",          IPMI::PICMG::Get_Shelf_Manager_IPMB_Address          },
	{ "Set Fan Policy",                          IPMI::PICMG::Set_Fan_Policy                          },
	{ "Get Fan Policy",                          IPMI::PICMG::Get_Fan_Policy                          },
	{ "FRU Control Capabilities",                IPMI::PICMG::FRU_Control_Capabilities                },
	{ "FRU Inventory Device Lock Control",       IPMI::PICMG::FRU_Inventory_Device_Lock_Control       },
	{ "FRU Inventory Device Write",              IPMI::PICMG::FRU_Inventory_Device_Write              },
	{ "Get Shelf Manager IP Addresses",          IPMI::PICMG::Get_Shelf_Manager_IP_Addresses          },
	{ "Get Shelf Power Allocation",              IPMI::PICMG::Get_Shelf_Power_Allocation              },
	{ "Get Telco Alarm Capability",              IPMI::PICMG::Get_Telco_Alarm_Capability              },
	{ "Set Telco Alarm State",                   IPMI::PICMG::Set_Telco_Alarm_State                   },
	{ "Get Telco Alarm State",                   IPMI::PICMG::Get_Telco_Alarm_State                   },
	{ "Get Telco Alarm Location",                IPMI::PICMG::Get_Telco_Alarm_Location                },
	{ "Set FRU Extracted",                       IPMI::PICMG::Set_FRU_Extracted                       },
	{ "Set LAN Configuration Parameters",        IPMI::Transport::Set_LAN_Configuration_Parameters    },
	{ "Get LAN Configuration Parameters",        IPMI::Transport::Get_LAN_Configuration_Parameters    },
	{ "Suspend BMC ARPs",                        IPMI::Transport::Suspend_BMC_ARPs                    },
	{ "Get IP UDP RMCP Statistics",              IPMI::Transport::Get_IP_UDP_RMCP_Statistics          },
	{ "Set Serial Modem Configuration",          IPMI::Transport::Set_Serial_Modem_Configuration      },
	{ "Get Serial Modem Configuration",          IPMI::Transport::Get_Serial_Modem_Configuration      },
	{ "Set Serial Modem Mux",                    IPMI::Transport::Set_Serial_Modem_Mux                },
	{ "Get TAP Response Codes",                  IPMI::Transport::Get_TAP_Response_Codes              },
	{ "Set PPP UDP Proxy Transmit Data",         IPMI::Transport::Set_PPP_UDP_Proxy_Transmit_Data     },
	{ "Get PPP UDP Proxy Transmit Data",         IPMI::Transport::Get_PPP_UDP_Proxy_Transmit_Data     },
	{ "Send PPP UDP Proxy Packet Transport",     IPMI::Transport::Send_PPP_UDP_Proxy_Packet_Transport },
	{ "Get PPP UDP Proxy Receive Data",          IPMI::Transport::Get_PPP_UDP_Proxy_Receive_Data      },
	{ "Serial Modem Connection Active",          IPMI::Transport::Serial_Modem_Connection_Active      },
	{ "Set User Callback Options",               IPMI::Transport::Set_User_Callback_Options           },
	{ "Get User Callback Options",               IPMI::Transport::Get_User_Callback_Options           },
};
